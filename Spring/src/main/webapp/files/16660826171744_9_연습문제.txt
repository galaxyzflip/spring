[4. 응용SW 기초기술 활용]
OSI Model (OSI 7계층 모형) 은 Open Systems Interconnection Reference Model의 약자로서, 국제표준화기구(ISO)에서 개발한 모형이다. 이 모형은 컴퓨터 네트워크의 프로토콜을 기능별로 나누어 각 계층로 설명한다. 각각의 계층은 하위 계층의 서비스(기능)만을 이용할 수 있고, 반대로 상위 계층에 서비스를 제공한다. OSI 7계층의 각각 기능을 기술하시오. 

① 물리 계층 - 비트흐름을 전송하기 위해 요구되는 기능들을 조정. 네트워크의 두 노드를 물리적으로 연결
② 데이터링크 계층 - 프레임을 전달하는 역할
  - MAC주소를 이용하여 정확한 장치로 정보 전달
③ 네트워크 계층  - 패킷(Packet)을 발신지로 부터 목적지로 전달할 책임을 갖는다
④ 전송 계층   - 전송이 유효한지 확인하고 신뢰성 있는 통신을 보장   - 세그먼터(Segment)
⑤ 세션 계층   - 포트연결(세션)이 유효한지 확인 
⑥ 표현 계층  - 운영체계의 한 부분으로 입력 또는 출력되는 데이터를 하나의 표현 형태로 변환, 
확장자(jpg, gif, mpg)
⑦ 응용 계층 - 사용자가 네트워크에 접근할 수 있도록 해주는 서비스를 제공

------------------------------------------------------------------------------------
인터넷 통신을 위한 기본 통신 프로토콜은? 4
  ① PPP 
  ② HDLC 
  ③ X,25 
  ④ TCP/IP


------------------------------------------------------------------------------------
다음 중 설명이 잘못 짝지어진 것은? 3

① TCP/IP – 네트워크 전송 프로토콜로서 인터넷 표준 프로토콜임.
② IP Address – 네트워크상에 존재하는 컴퓨터의 고유 번호.
③ 독점IP – 공인기관에서 할당받아 사용하는 네트워크상에 공개된 유일한 IP 번호.
④ 도메인 – 사용하기 편한 문자열 형태로 이루어진 주소로서 IP주소에 대응되는 형태.

------------------------------------------------------------------------------------
톰캣9.0을 설치하고 서비스를 시작했을 때 8080포트를 사용할 수 없다는 에러가 발생했을 때 해결방안을 서술하시오.

server.xml 파일에서 port를 변경한다.

------------------------------------------------------------------------------------
Windows 운영체제에서 Java응용 프로그램 개발을 위해 설정한 JDK의 환경변수에서 값을 제외한 환경변수 명칭을 모두 나열하고 설명하시오.
	   
1. JAVA_HOME 
2. path 
3. classpath 
4. CATALINA_HOME    
------------------------------------------------------------------------------------
적합한 CRUD 작업을 하시오. 
patient 테이블은 id (문자 5), name(문자 10), gender(문자 1), phone(문자 20) 속성을 가진다.

1) patient 테이블에 다음 내용을 입력하는 SQL문장을 쓰시오.
id: hong, name: 김하나, gender: f, phone : 010-500-7000
2) patient 테이블에서 id가 'hong' 인 레코드의 name을 '이수미' 로 수정하는 SQL 문장을 쓰시오.
3) patient 테이블에서 id가 'hong' 인 레코드를 삭제하는 SQL 문장을 쓰시오.

1) insert into patient(id, name, gender, phone)
values('hong','김하나','f','010-500-7000');

2) update patient set name='이수미' where id='hong';

3) delete patient where id='hong';
------------------------------------------------------------------------------------
기본 개발환경 구축과 관련된 문제이다. 아래 물음에 답하시오. 

1) 웹 어플리케이션 개발을 위해 웹 컨테이너인 톰캣을 설치하려고 한다.
톰캣 설치 후 환경변수 설정을 해야 한다. 필요한 환경변수 설정을 하시오.

2) Oracle 11g Express 설치 후 hr 사용자 잠김 해제와 비밀번호 변경을 해야 한다.
각각의 DDL문장을 쓰시오.
또한 설정파일에서 SERVICE_NAME, HOST, PORT를 확인해야 한다.
확인해야 할 오라클 설정 파일은 무엇인지 쓰시오.


[1] 톰캣 설치 후 환경변수 설정
1) JAVA_HOME : JDK설치 디렉토리 확인
변수이름- JAVA_HOME
변수 값- C:\java\jdk1.8.0_191

2) CATALINA_HOME : 톰캣 설치 디렉토리 추가
변수이름- CATALINA_HOME
변수 값- C:\Tomcat 9.0

3) path 편집
변수이름- path
변수값- %JAVA_HOME%\bin;%CATALINA_HOME%\bin;

4) classpath 편집 : servlet-api.jar와 jsp-api.jar 추가
변수명 - classpath 
변수값 - ;C:\Tomcat 9.0\lib\servlet-api.jar;C:\Tomcat 9.0\lib\jsp-api.jar

5) servlet-api.jar 를 복사하여
C:\java\jdk1.8.0_191\jre\lib\ext 에 붙여넣기 한다.


------------------------------------------------------------------------------------
[5. 프로그래밍 언어응용]

일반적으로 프로그램이 만들어지는 과정에서 소스코드를 실행 가능한 상태로 변환하는 처리를 무엇이라 하는가?

컴파일
------------------------------------------------------------------------------------
자바 소스코드가 실행 가능한 상태로 변환된 자바 바이트 코드를 실행 시켜주는 소프트웨어로서, 자바 프로그램은 이것이 설치된 환경이라면 운영체제나 하드웨어에 종속되지 않고 실행 가능하다. 이것이 의미하는 것은 무엇인가? 3

① JAVA Runtime
② JAVA Compiler
③ JAVA Virtual Machine
④ JAVA Debuger

------------------------------------------------------------------------------------
다형성을 지원하는 방법 중 하나로 오버로딩이 있다. 다음 중 오버로딩에 대한 작성 규칙을 설명한 것으로 적당하지 않은 것은? 2

① 메소드의 이름은 같아야한다.
② 매개변수의 개수가 같도록 한다.
③ 반환타입만 다른 메소드는 오버로딩되지 않는다.
④ 매개변수의 타입이 달라야 한다.

------------------------------------------------------------------------------------
다음은 클래스의 “접근한정자”에 대한 설명이다. 잘못된 것을 고르시오 3
    
① 하나의 소스코드에서 프로그램의 모든 기능을 구현하게 되면 유지보수에 비효율적이므로, 기능단위로 소스코드를 분리해야 한다.
② 소스코드가 분리된 클래스끼리는 public이 명시되어야만 서로 객체 생성이 가능하다.
③ 일반적으로 클래스 정의에는 public 접근 한정자만 사용한다.
④ 하나의 소스코드에는 여러 개의 public 클래스가 존재할 수 있다.

------------------------------------------------------------------------------------
반복문을 이용하여 1부터 45사이의 로또번호 6개를 뽑아내는 프로그램을 Java 언어로 작성하시오. 
로또게임의 수는 사용자가 입력한다. 
<처리조건>
 - 파일명은 Lotto 이고 package 명은 com.ezen
 - 중복된 난수가 나오면 안된다.
 
package com.ezen;
 
import java.util.Scanner;
 
public class Lotto {
    public static void main(String[] args) {
        /*
         * 로또번호 추출. 중복 없는 난수 6개를 추출한다. 1~45 사이의 난수여야 한다.
         */
        Scanner sc = new Scanner(System.in);
        System.out.print("몇 개의 세트를 추출하시겠습니까?\n>> ");
        int set = sc.nextInt();
        int cnt = 1;
 
        while (set > 0) {
 
            int[] nums = new int[6];
            for (int i = 0; i < nums.length; i++) {
                int temp = (int) (Math.random() * 45) + 1;
                nums[i] = temp;
 
                // 중복제거
                for (int j = 0; j < i; j++) {
                    if (nums[j] == temp) {
                        i--;
                        break;
                    }
                }
 
            } // for end
            System.out.print("\n"+ cnt + "번째 : " );
            for (int i = 0; i < nums.length; i++) {
                System.out.print(nums[i] + " ");
            }
            set--;
            cnt++;
        } // while end
        sc.close();
    }
}
------------------------------------------------------------------------------------
아래 조건과 같이 프로그램을 작성해서 결과를 출력하시오. 
       멤버변수와 생성자, 메소드를 가지는 Car 클래스를 작성하시오
	*클래스 이름  : Car
	*멤버변수 : protected int speed	//자동차 속도
		    protected String name	//자동차 이름
	*생성자  작성
		-모든 멤버변수를 0 또는 null 로 초기화 하는 생성자
		-자동자의 이름을 매개변수로 받아 초기화 하는 생성자
	*메소드 작성
		메소드명		리턴타입	 매개변수	접근제어	용도
		speedUp		void	   없음	public	자동차 속도 1증가
		speedDown	void	   없음	public	자동차 속도 1감소
		stop		void	   없음	public	자동차 속도 0으로설정
		display		void	   없음	public	자동자의 이름과 속도 출력

       위에서 작성한 Car 클래스를 상속받는 Taxi 클래스 작성하시오
	*클래스 이름 : Taxi
	*멤버변수 : private int charge	//택시요금
		 private boolean fare	//할증여부
		 private String company	//택시회사이름
	
	*생성자
		- 택시회사 이름을 매개변수로 받아 초기화하는 생성자

	*메소드 작성
	메소드명   리턴타입	매개변수	  접근제어	용도
	accounts	    void		 없음	   public    요금계산(속도 *10 , 할증시 속도*12)
	setFare	    void	         boolean	   public    할증여부 설정
	display      void		 없음       public    택시회사이름, 요금, 할증여부 출력

      위의 Taxi 클래스객체를 생성하여, 할증을 설정하고, 속도를 2까지 올린 상태에서 요금을계산하시오
	*객체생성시 택시회사 이름은 "서울택시" 라고 설정한다.
	
	
class Car {
	protected int speed;
	protected String name;
	Car(){
		speed = 0;
		name = null;
	}
	Car(String name){
		this.name = name;
	}
	public void speedUp(){
		speed++;
	}
	public void speedDown(){
		speed--;
	}
	public void stop(){
		speed = 0;
	}
	public void display(){
		System.out.println("자동차 이름" + name);
		System.out.println("자동차 속도" + speed);
	}
}

class Taxi extends Car {
	private int charge; //택시요금
	private boolean fare; //할증여부
	private String company; //택시회사이름

	Taxi(String company){
		this.company = company;
	}
	public void accounts() {
		if(fare){
			charge = speed * 12;
		}else{
			charge = speed * 10;
		}
	}
	public void setFare(boolean fare) {
		this.fare = fare;
	}
	public void display(){
		System.out.println("택시회사이름 : " + company);
		System.out.println("요금 할증 : " + fare);
		System.out.println("요금 : " + charge);
	}
}

class Guest {
	public static void main(String [] args) {
		Taxi t = new Taxi("서울택시");
		t.setFare(true);
		t.speedUp();
		t.speedUp(); 
		t.accounts();
		t.display();
	}
}

------------------------------------------------------------------------------------
[6. SQL 작성]

NCS 스키마에서 ‘NAME’이 들어있는 칼럼을 찾는 쿼리를 작성하시오.

SELECT * FROM information_schema.`COLUMNS`
WHERE information_schema.`COLUMNS`.TABLE_SCHEMA = 'NCS'
AND information_schema.`COLUMNS`.COLUMN_NAME LIKE '%NAME%';

----------------------------------------------------------------------------------
EMP(사원) 테이블에서 사원번호(EMPNO), 사원이름(ENAME), 급여(SAL), 30%인상될 경우의 급여를 추출하는 쿼리를 작성하시오. 단, 급여의 alias는 “현재 급여”로, 30%인상된 급여의 alias는 “30% 인상”으로 하시오.

SELECT EMPNO, ENAME, SAL AS “현재 급여”, SAL*1.3 AS “30% 인상” FROM EMP;

----------------------------------------------------------------------------------
EMP(사원) 테이블에서 사원의 이름(ENAME)이 'DA'로 시작하는 모든 정보를 출력하는 쿼리를 작성하시오.

SELECT 	* 
FROM 	EMP 
WHERE 	ENAME LIKE 'DA%';

----------------------------------------------------------------------------------
월급(salary)이 10,000 이 넘게 받는 사원이 소속된 부서의 모든 정보를 department_id의 내림차순으로 출력하시오.
단, 사원테이블(employees)과 부서테이블(departments)은 department_id로 연결되어 있다.

SELECT  *
FROM    departments dep
WHERE   EXISTS (SELECT  1
                FROM    employees emp
                WHERE   emp.department_id = dep.department_id
                AND     emp.salary > 10000 )
ORDER BY dep.department_id;

----------------------------------------------------------------------------------
데이터 무결성의 종류 4가지 종류와 특징에 대해서 기슬하시오.

개체 무결성 : 테이블 내 유일성을 보장하는 최소한의 속성 집합 
참조 무결성 : 자식 테이블의 참조 키값은 그 참조하는 부모 테이블의 기본 키값이거나 NULL값이어야 함
속성 무결성 : 칼럼은 지정된 데이터 형식과 범위를 반드시 만족하는 값만 허용
키  무결성 : 테이블 내에 같은 키값을 가진 행(레코드)들은 허용 안 됨

----------------------------------------------------------------------------------
사원테이블(employees)에서 사원번호(employee_id)가 120번인 사원의 부서번호(department_id)를 50으로 수정하는 쿼리를 작성하시오.

UPDATE  employees 
SET     department_id = 50 
WHERE   employee_id = 120;

----------------------------------------------------------------------------------
사원테이블(employees)에 아래와 같은 데이터를 입력하는 쿼리를 작성하시오.
employee_id : 999
last_name   : 길동
first_name  : 홍
email       : hong@gmail.com
hire_date   : 현재일자
job_id      : IT_PROG

INSERT INTO employees  (employee_id, last_name, first_name, email, hire_date, job_id) 
                VALUES (999, '길동', '홍', 'hong@gmail.com', sysdate, 'IT_PROG');

----------------------------------------------------------------------------------
부서 테이블(departments)에서 부서번호(department_id가 70인 레코드를 삭제하는 쿼리를 작성하시오.

DELETE FROM DEPARTMENTS WHERE DEPARTMENT_ID = 70 ;

----------------------------------------------------------------------------------
사원의 이름, 이메일, 부서아이디, 부서명, 직책아이디, 직책명, 도시(city)를 출력하는 쿼리를 작성하시오.

[사원테이블(EMPLOYEES)]
  사원의 이름(first_name, last_name), 이메일(email), 부서아이디(department_id), 직책아이디(job_id)
[부서테이블(DEPARTMENTS)]
  부서아이디(department_id), 부서명(department_name), 위치아이디(location_id)
[직책테이블(JOBS)]
  직책아이디(job_id), 직책명(job_title)
[위치테이블(LOCATIONS)]
  위치아이디(location_id), 도시(city), 주(state_province)

사원의 이름, 이메일, 부서명, 직책명, 도시(city)를 출력되도록 쿼리를 작성하시오.
단, state_province가 California인 경우에만 한해서

SELECT  emp.first_name, emp.last_name, emp.email, 
        dep.department_name, 
        job.job_title, 
        loc.city, loc.state_province
FROM    employees emp, departments dep, jobs job, locations loc
WHERE   emp.department_id   = dep.department_id -- 조인조건
AND     emp.job_id          = job.job_id        -- 조인조건
AND     dep.location_id     = loc.location_id   -- 조인조건
AND     loc.state_province  = 'California';     -- 일반조건

----------------------------------------------------------------------------------
사원테이블(EMPLOYEES)에서 입사일자(hire_date)의 년도에 상관없이 월별로 입사한 사원의 수를 출력하는 쿼리를 작성하시오

SELECT  SUM(m1), SUM(m2), SUM(m3), SUM(m4), SUM(m5), SUM(m6),
        SUM(m7), SUM(m8), SUM(m9), SUM(m10), SUM(m11), SUM(m12)
FROM (
    SELECT
            DECODE(TO_CHAR(hire_date, 'mm'), '01', count(*), 0) m1,
            DECODE(TO_CHAR(hire_date, 'mm'), '02', count(*), 0) m2,
            DECODE(TO_CHAR(hire_date, 'mm'), '03', count(*), 0) m3,
            DECODE(TO_CHAR(hire_date, 'mm'), '04', count(*), 0) m4,
            DECODE(TO_CHAR(hire_date, 'mm'), '05', count(*), 0) m5,
            DECODE(TO_CHAR(hire_date, 'mm'), '06', count(*), 0) m6,
            DECODE(TO_CHAR(hire_date, 'mm'), '07', count(*), 0) m7,
            DECODE(TO_CHAR(hire_date, 'mm'), '08', count(*), 0) m8,
            DECODE(TO_CHAR(hire_date, 'mm'), '09', count(*), 0) m9,
            DECODE(TO_CHAR(hire_date, 'mm'), '10', count(*), 0) m10,
            DECODE(TO_CHAR(hire_date, 'mm'), '11', count(*), 0) m11,
            DECODE(TO_CHAR(hire_date, 'mm'), '12', count(*), 0) m12
    FROM    employees
    GROUP BY TO_CHAR(hire_date, 'mm')
    ORDER BY TO_CHAR(hire_date, 'mm')
);

------------------------------------------------------------------------------------

------------------------------------------------------------------------------------
[7. SQL 활용]

트랜잭션에 대한 설명으로 옳지 않은 것은? (2)

① 데이터베이스 내에서 한 번에 수행되어야할 일련의 연산들이다.
② 모든 작업이 완료되기 전에 순차적으로 데이터베이스에 반영된다.
③ 둘 이상의 트랜잭션이 서로의 작업에 영향을 주지 않는다.
④ 트랜잭션 처리 구문으로 ROLLBACK과 COMMIT이 있다.

------------------------------------------------------------------------------------
두 개 이상의 테이블을 서로 연결하여 데이터를 검색할 때 사용하는 방법을 조인(JOIN)이라고 한다. 다음 중 오라클 데이터베이스의 조인에 대한 설명으로 올바르지 않은 것은? (4)

① 한 개의 테이블 만을 이용하여 조인할 수 있다.
② 두 개 이상의 테이블을 EQUI 조인할 때 한쪽 테이블에 일치하는 값이 없으면 NULL로 표현하기 위하여 (+) 연산자를 이용한다.
③ WHERE 조건절을 사용하지 않고 조인할 수 있다.
④ 테이블간의 연관 조건을 걸기위해 PRIMARY KEY와 FOREIGN KEY를 이용해야만 한다.

------------------------------------------------------------------------------------
SQL쿼리 구문에 조회쿼리가 추가적으로 들어간 구문을 서브쿼리라고 한다. 
          다음 중 서브쿼리에서 사용되지 않는 연산자는 무엇인가? (4)

① IN
② ANY
③ ALL
④ ADD

------------------------------------------------------------------------------------
오라클 데이터베이스에서는 테이블 내의 원하는 레코드를 빠르게 검색할 수 있도록 인덱스를 사용한다. 인덱스에 대한 설명으로 올바른 것은? (2)

① 테이블의 크기가 작을수록 인덱스를 적용하는 것이 효율적이다.
② PRIMARY KEY 제약조건에 의해 자동으로 인덱스를 생성한다.
③ 한번 생성하면 자동으로 갱신되기 때문에 별도의 관리가 필요하지 않다.
④ 인덱스는 PRIMARY KEY, FOREIGN KEY와 같은 특별한 컬럼에만 적용가능하다.

------------------------------------------------------------------------------------
harry라는 user가 다음 문장을 실행했을 경우 다음 보기 중 옳은 것은? (3)

        GRANT UPDATE ON emp TO scott,rich;

① scott은 harry의 emp table의 내용을 조회할 수 있다.
② harry는 rich의 emp table의 내용을 조회할 수 있다.
③ scott은 harry의 emp table의 내용을 수정할 수 있다.
④ harry는 scott의 emp table의 내용을 수정할 수 있다.

------------------------------------------------------------------------------------
SCOTT계정의 EMP 테이블에서 급여를 많이 받는 순서대로 5명의 이름과 급여를 출력하는 SELECT문을 작성하시오.

select rownum, empno, ename, sal
from (select empno, ename, sal from emp order by sal desc) 
where rownum <= 5;

------------------------------------------------------------------------------------
SCOTT계정에서 EMP에서 이름에 'L'자를 갖는 사원의 이름, 업무, 부서명, 급여를 출력하세요.

SELECT ENAME, JOB, DNAME, SAL
FROM EMP E JOIN DEPT D
ON E.DEPTNO=D.DEPTNO AND ENAME LIKE '%L%';

------------------------------------------------------------------------------------
다음은 EMP 테이블과 DEPT 테이블에 입력된 데이터의 예이다.

아래에서 제시한 조건과 제약사항에 따라 수행결과 형태대로 출력될 수 있도록 SELECT문을 작성하시오.(20점)

[조건]
사원번호(EMP_NO)가 '1003'번인 사원의 사원번호(EMP_NO),사원이름(EMP_NAME), 입사일(EMP_HDATE), 부서번호(DEPT_NO), 부서명(DEPT_NAME), 지역(DEPT_AREA)을 출력하시오.

[제약사항]
 (1) INNER Join을 활용해야 한다.
 (2) 각 테이블명은 다음에서 정한 별칭(alias)를 사용하여야 한다.
    - EMP의 별칭 : E
    - DEPT의 별칭 : D
	
SELECT E.EMP_NO, E.EMP_NAME, E.EMP_HDATE, E.DEPT_NO, D.DEPT_NAME, D.DEPT_AREA
  FROM EMP E, DEPT D
  WHERE E.DEPT_NO = D.DEPT_NO
  AND E.EMP_NO = '1003';
또는
  SELECT E.EMP_NO, E.EMP_NAME, E.EMP_HDATE, E.DEPT_NO, D.DEPT_NAME, D.DEPT_AREA
  FROM EMP E JOIN DEPT D
  ON E.DEPT_NO = D.DEPT_NO
  AND E.EMP_NO = '1003';
  
------------------------------------------------------------------------------------
1. 성적처리 테이블을 생성하세요.
CREATE TABLE sungjeok (
	hakbun	number(4) primary key,
	name	varchar2(20) not null,
	kor		number(4) 	 not null,
	eng		number(4) 	 not null,
	mat		number(4) 	 not null,
	tot		number(4),
	ave		number(5, 1)
);


------------------------------------------------------------------------------------
[8. 데이터베이스 구현]

데이터베이스에서 다음이 설명하는 것으로 알맞은 것은? (2)

    -테이블 및 뷰들의 집합으로 데이터베이스 전반에 대한 정보를 제공한다. 
    -오라클의 사용자 정보, 권한과 롤 정보, 스키마 객체 정보, 무결성 제약조건 정보 등이 저장되
     며 DDL명령이 실행될 때마다 접근한다.

① Procedure
② Data Dictionary
③ Database
④ Tablespace

------------------------------------------------------------------------------------
스키마란 데이터베이스의 구조와 제약조건에 관해 전반적인 명세를 기술한 것이다. 스키마에 대한 설명으로 올바르지 않은 것은? (3)
 
① 사용자 관점에 따라 외부, 내부, 개념 스키마로 구분한다.
② 물리적인 저장장치에 DB가 저장되는 방법을 기술한 것을 내부스키마라고 한다.
③ 메타데이터(Meta Data)라고도 불린다.
④ 외부 스키마는 데이터베이스 내에 단 한 개만 존재할 수 있다.

------------------------------------------------------------------------------------
테이블에 부적절한 자료가 입력되는 것을 방지하기위해 여러 가지 규칙을 적용하는데 이것을 제약조건이라고 한다. 다음 제약조건에 대한 설명 중 올바른 것은? (1)

① 컬럼에 항상 데이터가 입력되어야만 하는 제약조건으로 NOT NULL을 사용한다.
② 제약조건은 한번에 하나씩만 적용할 수 있다.
③ UNIQUE 조건을 사용할 경우 인덱스를 별도로 설정해주어야 한다.
④ 컬럼의 기본값을 지정하기 위해서 CHECK 조건을 사용한다.

------------------------------------------------------------------------------------
트리거 객체 생성시 :OLD, :NEW 에 대해 틀린 것은? (1)

① 문장레벨 트리거에서 사용할 수 있다.
② :OLD.컬럼명은 SQL 반영전의 컬럼 데이터를 의미한다.
③ :NEW.컬럼명은 SQL 반영 후의 컬럼 데이터를 의미한다.
④ insert문은  :OLD를 , delete문은 :NEW 를 사용할 수 없다.

------------------------------------------------------------------------------------
테이블 생성 시 명시해야 할 항목에 포함되지 않는 것을 고르시오. (4)

①. 열 이름
②. 열에 입력될 실제 데이터들의 형식 지정
③. 테이블 이름
④. 데이터베이스 이름

------------------------------------------------------------------------------------
view에 대한 설명으로 옳지 않은 것은? (2)

①. view는 독자적인 인덱스를 가질 수 없다.
②. view는 삽입, 삭제, 갱신 연산에 제약사항이 없다.
③. view는 데이터 접근제어로 보안을 제공한다.
④. view는 데이터의 논리적 독립성을 제공한다. 

------------------------------------------------------------------------------------
데이터베이스의 대표적인 오브젝트인 테이블과 인덱스에 대하여 설명하시오.

1. 테이블(table)
테이블은 행(Row)과 칼럼(Column)으로 구성되는 가장 기본적인 데이터베이스 객체로 데이터베이스 내에서 모든 데이터는 테이블을 통해 저장된다.
2. 인덱스(Index)
인덱스는 어떤 종류의 검색 연산을 최적화하기 위해 데이터베이스상에 로우들의 정보를 구성하는 데이터 구조이다. 인덱스를 이용하면 전체 데이터를 검색하지 않고 데이터베이스에서 원하는 정보를 빠르게 검색할 수 있다.

------------------------------------------------------------------------------------
샘플 테이블인 emp와 dept 테이블을 이용해서 다음의 쿼리문을 작성하시오.
 (PPT에는 쿼리문코드와 결과내용이 다 있어야 하며, 입력된 결과물은 sql developer 화면을 캡쳐해서 넣어주세요.) 

1. 'MARTIN'이나 'SCOTT'의 급여와 같은 사원의 사원번호, 이름, 급여를 출력하라.

2. 급여가 30번 부서의 최저 급여보다 높은 사원의 사원번호, 이름, 급여를 출력하라.

3. 10번 부서에 근무하는 사원의 사원번호, 이름, 부서명, 지역, 급여를 급여가 많은 순으로 출력하라.

1.select empno, ename, sal from emp
 where sal in ( select sal from emp where ename in ('MARTIN', 'SCOTT') );
2.select empno, ename, sal from emp
 where sal > (select min(sal) from emp where deptno = 30 );
3.select e.empno, e.ename, d.dname, d.loc, e.sal
   from emp e, dept d
   where e.deptno = d.deptno
   and e.deptno = 10;
   
------------------------------------------------------------------------------------
아래의 테이블 예시에 맞게 쿼리문을 작성하시오. 

1. 테이블을 생성하는 쿼리문을 작성하시오. id는 sequence를 생성하시오.
2. 생성된 테이블에 데이터를 입력하는 쿼리문을 작성하시오.
3. 테이블에 저장된 데이터를 비밀번호를 수정하는 쿼리문을 작성하시오.

create table members(
	id number not null primary key,
	realname varchar2(50) not null,
	username varchar2(50) not null,
	password varchar2(255) not null,
	email varchar2(150) not null,
	gender varchar2(1) not null
		CONSTRAINT check_gender CHECK ( gender IN ('M', 'F') ),
	birthdate date not null,
	tel varchar2(20) not null,
	postcode char(5) not null,
	addr1 varchar2(150) not null,
	addr2 varchar2(150), 
	is_admin varchar2(1) not null,
		CONSTRAINT check_admin CHECK (is_admin IN ('Y', 'N') ),
	reg_date date not null,
	edit_date date not null
);

create sequence mem_seq;


시퀀스 만들기
create sequence mem_seq;

데이터입력
INSERT INTO members values(2020, ‘기라성’, ‘홍길동’, ‘tiger1’, ‘fktjd5662@naver.com’, ’M’, ’1993년 7월 17일‘,
01090815355, 456, ’서울시 은평구‘, ’응암동730‘, ’N’ , ‘2022년 5월 16일’, ‘2022년 5월 17일’);

데이터변경
UPDATE members SET username = ‘강아지’;

------------------------------------------------------------------------------------
[9. SQL 응용]


-----------------------------------------------------------------------
절차형 SQL의 특징을 잘못 설명한 것은? 4
DBMS 엔진에서 직접 실행한다.
BEGIN/END의 Block화된 구조로 되어 있어 각 기능별로 모듈화가 가능하다.
조건문, 반복문 등 단일 SQL 문장으로는 실행하기 어려운 연속적인 작업을 처리하는 데에 적합하다.
비즈니스 로직을 캡슐화하여 데이터 관리를 단순화하고 무결성 유지 및 일관성 보장이 되지 않는다.

-----------------------------------------------------------------------
절차형 SQL의 구성에서 컴파일도 가능하고 실행도 가능하기 위한 필요한 요소가 아닌 것은?  1

SELECT
DECLARE
BEGIN
END
-----------------------------------------------------------------------
프로시저의 구성요소에 대한 설명으로 잘못된 것은? 2

DECLARE : 프로시저의 명칭, 변수와 인수 그리고 그에 대한 데이터 타입을 정의하는 선언부이다.
START / GOAL : 프로시저의 시작과 종료를 표현하는 데 필수적이다.
CONTROL : 기본적으로는 순차적으로 처리한다.
SQL : DQL(SELECT), DML(INSERT, UPDATE, DELETE)을 주로 사용한다.

-----------------------------------------------------------------------
프로시저를 작성할 때 관련된 기존 테이블 및 데이터 간의 관계를 분석하는 것이 아닌 것은? 1

프로시저 내에서 구현하고자 하는 결과 데이터 생성을 위한 요소 데이터가 맞는지 확인한다.
필요로 하는 모든 데이터 조회 및 접근이 가능하도록 한다.
관련된 데이터를 분석한다.
구현에 필요한 모든 데이터를 취합하였는지 확인하고, 필요시 이전 단계로 돌아가 필요한 데이터 및 관련 테이블을 조사한다.

-----------------------------------------------------------------------
사용자 정의함수를 작성할 때 하는 것으로 잘못된 것은? 3

사용자 정의함수 반환값을 정의한다.
생성할 사용자 정의함수와 관련된 기존 테이블 및 데이터를 확인한다.
사용자 정의함수 실행 시 나타나는 메시지를 참조한다.
관련된 기존 테이블 및 데이터 간의 관계를 분석한다.

-----------------------------------------------------------------------
다음 중 집계 함수의 분류가 아닌 것은? 4

COUNT
SUM
AVG
UPPER

-----------------------------------------------------------------------
사원테이블(EMP)에서 직책(JOB)이 CLERK 또는 SALESMAN인 사원들의 이름(ENAME), 직책(JOB), 월급(SAL)을 출력해주세요.
단, 월급이 1500보다 많은 직원들에 한해서 출력하시오.

SELECT  ename, job, sal
FROM    emp
WHERE   (job = 'CLEARK' AND sal > 1500) OR (job = 'SALESMAN' AND sal > 1500);

또는

SELECT  ename, job, sal
FROM    emp
WHERE   (job = 'CLERK' OR job = 'SALESMAN') AND sal > 1500;

-----------------------------------------------------------------------

사원테이블(EMP)에서 월급(SAL)을 2900이상 받는 사원이 소속된 부서번호(DEPTNO), 최대 월급(SAL)을 구하시오.

SELECT  deptno, MAX(sal)
FROM    emp
GROUP BY deptno
HAVING   MAX(sal) >= 2900
ORDER BY deptno;

-----------------------------------------------------------------------

부서가 속한 도시, 부서명，직급아이디별로 소속된 도시, 부서명，직급아이디, 사원의 수와 그들의 월급 합계를 출력하는 쿼리를 작성하시오.
시애틀(Seattle)에 위치한 부서에 한해서 출력하시오.
이 세 가지 가능한 조합의 수는 8가지(도시별，부서별，직급별，도시와부서별，도시와직급별，부서와직급별，도시와부서와 직급별，그리고 전체)의 소계 정보도 나오도록 쿼리문을 작성하시오.
출력되는 순서는 도시, 부서이름, 직책아이디의 내림차순으로 출력하시오.

사원 테이블 employees
부서 테이블 departments
위치 테이블 locations   

사원 테이블 : 부서아이디(department_id), 직책아이디(job_id), 월급(salary)
부서 테이블 : 부서아이디(department_id)
위치 테이블 : 도시(city), 위치아이디(location_id)

SELECT  l.city, d.department_name, e.job_id,
        COUNT(*) persons, TO_CHAR(SUM(e.salary), '999,999') tot_sal
FROM    employees   e,
        departments d,
        locations   l
WHERE   e.department_id = d.department_id
AND     d.location_id   = l.location_id
AND     l.city = 'Seattle'
GROUP BY CUBE(l.city, d.department_name, e.job_id)
ORDER BY l.city, d.department_name, e.job_id;

------------------------------------------------------------------------------------
